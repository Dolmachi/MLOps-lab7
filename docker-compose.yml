services:
  main:
    build:
      context: ./src/main
      dockerfile: Dockerfile
    image: main-image
    container_name: main-container
    environment:
      - VITRINE_PATH=/vitrine/products_mart.parquet
    volumes:
      - vitrine:/vitrine
    networks:
    - app-network
    depends_on:
      datamart:
        condition: service_completed_successfully

  datamart:
    build:
      context: ./src/datamart
      dockerfile: Dockerfile
    image: datamart-image
    container_name: datamart-container
    volumes:
      - vitrine:/vitrine
    networks:
    - app-network
    depends_on:
      mongodb:
        condition: service_healthy

  mongodb:
    image: mongo
    container_name: mongodb-container
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=12345
    volumes:
      - ./data/mongo-dump:/dump:ro
      - ./scripts/restore.sh:/docker-entrypoint-initdb.d/restore.sh:ro
    networks:
      - app-network
    healthcheck:
      test: bash -c '[ -f /data/db/RESTORE_DONE ] && mongosh --quiet -u user -p 12345 --eval "db.adminCommand(\"ping\")"'
      interval: 10s
      timeout: 5s
      retries: 30
      start_period: 20s
  
networks:
  app-network:
    driver: bridge

volumes:
  vitrine: {} 
